# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-08-06 13:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import pages.models
import wagtail.contrib.table_block.blocks
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtaildocs.blocks
import wagtail.wagtailembeds.blocks
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0039_collectionviewrestriction'),
    ]

    operations = [
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.CharField(blank=True, help_text='Default value. Comma separated values supported for checkboxes.', max_length=255, verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, verbose_name='to address')),
                ('from_address', models.CharField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('thank_you_text', wagtail.wagtailcore.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.StreamField((('single_column', wagtail.wagtailcore.blocks.StructBlock((('column', wagtail.wagtailcore.blocks.StreamBlock((('h2', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h3', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h4', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='includes/table.html')), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('document', wagtail.wagtaildocs.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('embedded_video', wagtail.wagtailembeds.blocks.EmbedBlock()), ('lead_body', wagtail.wagtailcore.blocks.CharBlock(classname='lead')), ('small_text', wagtail.wagtailcore.blocks.CharBlock(classname='small')), ('blockquote', wagtail.wagtailcore.blocks.CharBlock(classname='blockquote')), ('pull_quote', wagtail.wagtailcore.blocks.StructBlock((('quote', wagtail.wagtailcore.blocks.TextBlock('quote title')), ('attribution', wagtail.wagtailcore.blocks.CharBlock())))), ('icon', wagtail.wagtailcore.blocks.StructBlock((('font_awesome_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('font_awesome_icon_size', pages.models.FontAwesomeIconSizeBlock()), ('material_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('material_icon_size', pages.models.MaterialIconSizeBlock()), ('alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('normal', 'Normal'), ('left-align', 'Left Align'), ('right-align', 'Right Align'), ('center-align', 'Center Align')], classname='choice'))))), ('raw_html', wagtail.wagtailcore.blocks.RawHTMLBlock(classname='alignment'))))), ('background_color', pages.models.BackgroundColorBlock())), group='COLUMNS')), ('two_columns', wagtail.wagtailcore.blocks.StructBlock((('left_column', wagtail.wagtailcore.blocks.StreamBlock((('h2', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h3', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h4', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='includes/table.html')), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('document', wagtail.wagtaildocs.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('embedded_video', wagtail.wagtailembeds.blocks.EmbedBlock()), ('lead_body', wagtail.wagtailcore.blocks.CharBlock(classname='lead')), ('small_text', wagtail.wagtailcore.blocks.CharBlock(classname='small')), ('blockquote', wagtail.wagtailcore.blocks.CharBlock(classname='blockquote')), ('pull_quote', wagtail.wagtailcore.blocks.StructBlock((('quote', wagtail.wagtailcore.blocks.TextBlock('quote title')), ('attribution', wagtail.wagtailcore.blocks.CharBlock())))), ('icon', wagtail.wagtailcore.blocks.StructBlock((('font_awesome_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('font_awesome_icon_size', pages.models.FontAwesomeIconSizeBlock()), ('material_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('material_icon_size', pages.models.MaterialIconSizeBlock()), ('alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('normal', 'Normal'), ('left-align', 'Left Align'), ('right-align', 'Right Align'), ('center-align', 'Center Align')], classname='choice'))))), ('raw_html', wagtail.wagtailcore.blocks.RawHTMLBlock(classname='alignment'))))), ('right_column', wagtail.wagtailcore.blocks.StreamBlock((('h2', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h3', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h4', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='includes/table.html')), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('document', wagtail.wagtaildocs.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('embedded_video', wagtail.wagtailembeds.blocks.EmbedBlock()), ('lead_body', wagtail.wagtailcore.blocks.CharBlock(classname='lead')), ('small_text', wagtail.wagtailcore.blocks.CharBlock(classname='small')), ('blockquote', wagtail.wagtailcore.blocks.CharBlock(classname='blockquote')), ('pull_quote', wagtail.wagtailcore.blocks.StructBlock((('quote', wagtail.wagtailcore.blocks.TextBlock('quote title')), ('attribution', wagtail.wagtailcore.blocks.CharBlock())))), ('icon', wagtail.wagtailcore.blocks.StructBlock((('font_awesome_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('font_awesome_icon_size', pages.models.FontAwesomeIconSizeBlock()), ('material_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('material_icon_size', pages.models.MaterialIconSizeBlock()), ('alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('normal', 'Normal'), ('left-align', 'Left Align'), ('right-align', 'Right Align'), ('center-align', 'Center Align')], classname='choice'))))), ('raw_html', wagtail.wagtailcore.blocks.RawHTMLBlock(classname='alignment'))))), ('background_color', pages.models.BackgroundColorBlock())), group='COLUMNS')), ('four_columns', wagtail.wagtailcore.blocks.StructBlock((('left_column_1', wagtail.wagtailcore.blocks.StreamBlock((('h2', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h3', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h4', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='includes/table.html')), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('document', wagtail.wagtaildocs.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('embedded_video', wagtail.wagtailembeds.blocks.EmbedBlock()), ('lead_body', wagtail.wagtailcore.blocks.CharBlock(classname='lead')), ('small_text', wagtail.wagtailcore.blocks.CharBlock(classname='small')), ('blockquote', wagtail.wagtailcore.blocks.CharBlock(classname='blockquote')), ('pull_quote', wagtail.wagtailcore.blocks.StructBlock((('quote', wagtail.wagtailcore.blocks.TextBlock('quote title')), ('attribution', wagtail.wagtailcore.blocks.CharBlock())))), ('icon', wagtail.wagtailcore.blocks.StructBlock((('font_awesome_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('font_awesome_icon_size', pages.models.FontAwesomeIconSizeBlock()), ('material_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('material_icon_size', pages.models.MaterialIconSizeBlock()), ('alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('normal', 'Normal'), ('left-align', 'Left Align'), ('right-align', 'Right Align'), ('center-align', 'Center Align')], classname='choice'))))), ('raw_html', wagtail.wagtailcore.blocks.RawHTMLBlock(classname='alignment'))))), ('left_column_2', wagtail.wagtailcore.blocks.StreamBlock((('h2', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h3', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h4', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='includes/table.html')), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('document', wagtail.wagtaildocs.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('embedded_video', wagtail.wagtailembeds.blocks.EmbedBlock()), ('lead_body', wagtail.wagtailcore.blocks.CharBlock(classname='lead')), ('small_text', wagtail.wagtailcore.blocks.CharBlock(classname='small')), ('blockquote', wagtail.wagtailcore.blocks.CharBlock(classname='blockquote')), ('pull_quote', wagtail.wagtailcore.blocks.StructBlock((('quote', wagtail.wagtailcore.blocks.TextBlock('quote title')), ('attribution', wagtail.wagtailcore.blocks.CharBlock())))), ('icon', wagtail.wagtailcore.blocks.StructBlock((('font_awesome_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('font_awesome_icon_size', pages.models.FontAwesomeIconSizeBlock()), ('material_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('material_icon_size', pages.models.MaterialIconSizeBlock()), ('alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('normal', 'Normal'), ('left-align', 'Left Align'), ('right-align', 'Right Align'), ('center-align', 'Center Align')], classname='choice'))))), ('raw_html', wagtail.wagtailcore.blocks.RawHTMLBlock(classname='alignment'))))), ('right_column_1', wagtail.wagtailcore.blocks.StreamBlock((('h2', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h3', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h4', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='includes/table.html')), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('document', wagtail.wagtaildocs.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('embedded_video', wagtail.wagtailembeds.blocks.EmbedBlock()), ('lead_body', wagtail.wagtailcore.blocks.CharBlock(classname='lead')), ('small_text', wagtail.wagtailcore.blocks.CharBlock(classname='small')), ('blockquote', wagtail.wagtailcore.blocks.CharBlock(classname='blockquote')), ('pull_quote', wagtail.wagtailcore.blocks.StructBlock((('quote', wagtail.wagtailcore.blocks.TextBlock('quote title')), ('attribution', wagtail.wagtailcore.blocks.CharBlock())))), ('icon', wagtail.wagtailcore.blocks.StructBlock((('font_awesome_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('font_awesome_icon_size', pages.models.FontAwesomeIconSizeBlock()), ('material_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('material_icon_size', pages.models.MaterialIconSizeBlock()), ('alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('normal', 'Normal'), ('left-align', 'Left Align'), ('right-align', 'Right Align'), ('center-align', 'Center Align')], classname='choice'))))), ('raw_html', wagtail.wagtailcore.blocks.RawHTMLBlock(classname='alignment'))))), ('right_column_2', wagtail.wagtailcore.blocks.StreamBlock((('h2', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h3', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('h4', wagtail.wagtailcore.blocks.CharBlock(classname='title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='includes/table.html')), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('document', wagtail.wagtaildocs.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('embedded_video', wagtail.wagtailembeds.blocks.EmbedBlock()), ('lead_body', wagtail.wagtailcore.blocks.CharBlock(classname='lead')), ('small_text', wagtail.wagtailcore.blocks.CharBlock(classname='small')), ('blockquote', wagtail.wagtailcore.blocks.CharBlock(classname='blockquote')), ('pull_quote', wagtail.wagtailcore.blocks.StructBlock((('quote', wagtail.wagtailcore.blocks.TextBlock('quote title')), ('attribution', wagtail.wagtailcore.blocks.CharBlock())))), ('icon', wagtail.wagtailcore.blocks.StructBlock((('font_awesome_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('font_awesome_icon_size', pages.models.FontAwesomeIconSizeBlock()), ('material_icon_name', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('material_icon_size', pages.models.MaterialIconSizeBlock()), ('alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('normal', 'Normal'), ('left-align', 'Left Align'), ('right-align', 'Right Align'), ('center-align', 'Center Align')], classname='choice'))))), ('raw_html', wagtail.wagtailcore.blocks.RawHTMLBlock(classname='alignment'))))), ('background_color', pages.models.BackgroundColorBlock())), group='COLUMNS')), ('hero_image', wagtail.wagtailcore.blocks.StructBlock((('image', wagtail.wagtailimages.blocks.ImageChooserBlock(required=True)), ('alternate_text', wagtail.wagtailcore.blocks.CharBlock(help_text='Text for screen readers')), ('caption', wagtail.wagtailcore.blocks.CharBlock(help_text='Caption will be shown below the image', max_length=120, required=False)), ('overlay_text', wagtail.wagtailcore.blocks.BooleanBlock(help_text='If checked, caption is overlayed on image', required=False)), ('photo_credit', wagtail.wagtailcore.blocks.CharBlock(help_text='This will show bottom right on the image', max_length=80, required=False))), icon='image'))), default='')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='formfield',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='pages.FormPage'),
        ),
    ]
